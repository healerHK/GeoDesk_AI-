"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 4.2.dev20230116083134.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

import os
import json
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - updated for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-^#f@e(-h%=$vdha5x)j9n44^n0sl2)92sav8eknl&@_g9tu2tk')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

CORS_ALLOW_HEADERS = (
    'x-requested-with',
    'content-type',
    'accept',
    'origin',
    'authorization',
    'accept-encoding',
    'x-csrftoken',
    'access-control-allow-origin',
    'content-disposition',
    'withcredentials',
    'cookie',
)
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = ('GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS')
CSRF_TRUSTED_ORIGINS = ["https://geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net"]
CORS_ALLOWED_ORIGINS = [
    'https://geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net',
]
ALLOWED_HOSTS = ['geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net']
SITE_HOST = "geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net"
SITE_ID = 1
SITE_URL = 'https://geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net'

# Application definition
PROJECT_APPS = [
    'object_permissions',
    'forms',
    'user',
    'website',
    'data_catalogue',
    'appboard',
    'media_file',
    'project',
    'tms',
    'lms',
    'native_title_management',
    'geochem',
    'interactive_map',
    'geodesk_gis',
    'project_management',
    'autoform',
    'knowledge_management_system',
    'notification'
]

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'daphne',
    'attrs',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.gis",
    "django.contrib.sites",
    'django.contrib.humanize',
    'leaflet',
    'channels',
    'common',
] + PROJECT_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.template.context_processors.request',
                'django.contrib.messages.context_processors.messages',
                'djconfig.context_processors.config',
                'appboard.contextprocessors.create_project_form',
            ],
        },
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
     ),
     'DEFAULT_PERMISSIONS_CLASSES': (
      'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.IsAdminUser',
     ),
}

# Authentication backends
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

WSGI_APPLICATION = 'main.wsgi.application'
ASGI_APPLICATION = 'main.asgi.application'

# Use Redis for production if available, otherwise fallback to InMemoryChannelLayer
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379/0')],
        },
    }
}

# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASES = {
    'default': {
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASS'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'user.User'
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

# Email confirmation
ACCOUNT_EMAIL_SUBJECT_PREFIX = "[OreFox.com]"
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True

# After 10 failed login attempts, restrict logins for 30 minutes
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 1800
ACCOUNT_PASSWORD_MIN_LENGTH = 8

# Other settings
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True
SOCIALACCOUNT_AUTO_SIGNUP = False

LOGIN_REDIRECT_URL = 'appboard:home'
ACCOUNT_LOGOUT_REDIRECT_URL = 'user:login'

# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = 'en-AU'
TIME_ZONE = 'Australia/Brisbane'
DATE_FORMAT = 'M, d. Y'
DATETIME_FORMAT = 'M, d. Y. H:i:s e'
USE_I18N = True
USE_L10N = False
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/dev/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': os.path.join(BASE_DIR, 'st_search'),
    },
}
HAYSTACK_SIGNAL_PROCESSOR = 'spirit.search.signals.RealtimeSignalProcessor'

ST_SITE_URL = 'https://geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net/'

LOGIN_URL = 'user:login'
LOGIN_REDIRECT_URL = 'appboard:home'
LOGOUT_REDIRECT_URL = 'user:login'

# Email settings for production (configure in Azure Application Settings)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = os.environ.get('EMAIL_PORT', 587)
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS', True)
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')

PASSWORD_RESET_TIMEOUT = 1440

# Stripe settings (loaded from environment variables)
STRIPE_SECRET_KEY = os.environ.get('STRIPE_SECRET_KEY', '')
STRIPE_SECRET_WEBHOOK = os.environ.get('STRIPE_SECRET_WEBHOOK', '')

# APPSTORE URLs for production
APP_STORE_URL = "https://geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net"
APP_STORE_FRONTEND_URL = "https://geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net/home"
FRONTEND_DOMAIN = "https://geodeskai-gtgybgangdhzh7fq.australiasoutheast-01.azurewebsites.net"
